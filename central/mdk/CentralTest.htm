<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\CentralTest.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\CentralTest.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Mon Jun 08 21:59:16 2015
<BR><P>
<H3>Maximum Stack Usage =        236 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; device_manager_init &rArr; dm_init &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[46]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from softdevice_handler.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_nrf51.o(.text) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">UART0_IRQHandler</a> from app_uart_fifo.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[29]">alert_timer_handler</a> from bsp.o(.text) referenced from bsp.o(.text)
 <LI><a href="#[23]">bas_c_evt_handler</a> from central_test.o(.text) referenced from central_test.o(.text)
 <LI><a href="#[24]">ble_evt_dispatch</a> from central_test.o(.text) referenced from central_test.o(.text)
 <LI><a href="#[37]">bsp_button_event_handler</a> from bsp.o(.text) referenced 4 times from bsp.o(.constdata)
 <LI><a href="#[20]">bsp_event_handler</a> from central_test.o(.text) referenced from central_test.o(.text)
 <LI><a href="#[27]">button_timer_handler</a> from bsp.o(.text) referenced from bsp.o(.text)
 <LI><a href="#[31]">db_discover_evt_handler</a> from ble_hrs_c.o(.text) referenced from ble_hrs_c.o(.text)
 <LI><a href="#[30]">db_discovery_evt_handler</a> from ble_bas_c.o(.text) referenced from ble_bas_c.o(.text)
 <LI><a href="#[34]">detection_delay_timeout_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[26]">device_manager_event_handler</a> from central_test.o(.text) referenced from central_test.o(.text)
 <LI><a href="#[2f]">dm_pstorage_cb_handler</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.text)
 <LI><a href="#[36]">fputc</a> from retarget.o(.text) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[42]">gattc_context_apply</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[3e]">gattc_context_load</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[3a]">gattc_context_store</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[41]">gatts_context_apply</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[3d]">gatts_context_load</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[39]">gatts_context_store</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[43]">gattsc_context_apply</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[3f]">gattsc_context_load</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[3b]">gattsc_context_store</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[33]">gpiote_event_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[32]">gpiote_uart_event_handler</a> from app_uart_fifo.o(.text) referenced from app_uart_fifo.o(.text)
 <LI><a href="#[22]">hrs_c_evt_handler</a> from central_test.o(.text) referenced from central_test.o(.text)
 <LI><a href="#[28]">leds_timer_handler</a> from bsp.o(.text) referenced from bsp.o(.text)
 <LI><a href="#[1f]">main</a> from central_test.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[40]">no_service_context_apply</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[3c]">no_service_context_load</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[38]">no_service_context_store</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.constdata)
 <LI><a href="#[2e]">pstorage_store</a> from pstorage.o(.text) referenced from device_manager_central.o(.text)
 <LI><a href="#[2d]">pstorage_update</a> from pstorage.o(.text) referenced from device_manager_central.o(.text)
 <LI><a href="#[35]">softdevice_assertion_handler</a> from softdevice_handler.o(.text) referenced from softdevice_handler.o(.text)
 <LI><a href="#[2c]">storage_operation_dummy_handler</a> from device_manager_central.o(.text) referenced from device_manager_central.o(.text)
 <LI><a href="#[25]">sys_evt_dispatch</a> from central_test.o(.text) referenced from central_test.o(.text)
 <LI><a href="#[21]">uart_error_handle</a> from central_test.o(.text) referenced from central_test.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[44]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e0]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e4]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[e5]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[e6]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[e7]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[e8]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[46]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>

<P><STRONG><a name="[47]"></a>assert_nrf_callback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = assert_nrf_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_assertion_handler
</UL>

<P><STRONG><a name="[21]"></a>uart_error_handle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_error_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>bsp_event_handler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = bsp_event_handler &rArr; scan_start &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = main &rArr; device_manager_init &rArr; dm_init &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[e9]"></a>bsp_buttons_state_get</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, bsp.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>bsp_button_is_pressed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
</UL>

<P><STRONG><a name="[4c]"></a>bsp_indication_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_text_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>

<P><STRONG><a name="[72]"></a>bsp_indication_text_set</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[73]"></a>bsp_event_to_button_action_assign</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
</UL>

<P><STRONG><a name="[5f]"></a>bsp_init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = bsp_init &rArr; app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>bsp_buttons_enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[78]"></a>bsp_buttons_disable</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
</UL>

<P><STRONG><a name="[7b]"></a>bsp_wakeup_buttons_set</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
</UL>

<P><STRONG><a name="[5a]"></a>bsp_btn_ble_sleep_mode_prepare</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_btn_ble_sleep_mode_prepare &rArr; bsp_wakeup_buttons_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
</UL>

<P><STRONG><a name="[58]"></a>bsp_btn_ble_on_ble_evt</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_btn_ble_on_ble_evt &rArr; advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[60]"></a>bsp_btn_ble_init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_btn_ble_init &rArr; advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_is_pressed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_nrf51.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>ble_db_discovery_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_db_discovery.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>ble_db_discovery_close</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_db_discovery.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>ble_db_discovery_evt_register</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_db_discovery_evt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_init
</UL>

<P><STRONG><a name="[4e]"></a>ble_db_discovery_start</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_db_discovery_start
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
</UL>

<P><STRONG><a name="[55]"></a>ble_db_discovery_on_ble_evt</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_db_discovery_on_ble_evt &rArr; on_characteristic_discovery_rsp &rArr; on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; pending_user_evts_send
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristics_discover
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[95]"></a>initiate_security_request</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initiate_security_request
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_security_setup_req
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[90]"></a>dm_handle_initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[6b]"></a>dm_init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = dm_init &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[6c]"></a>dm_register</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dm_register
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[50]"></a>dm_security_setup_req</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dm_security_setup_req &rArr; initiate_security_request
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_security_request
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs_c_evt_handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
</UL>

<P><STRONG><a name="[ec]"></a>dm_security_status_req</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>dm_whitelist_create</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dm_whitelist_create
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>

<P><STRONG><a name="[ed]"></a>dm_device_add</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>dm_device_delete</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
</UL>

<P><STRONG><a name="[98]"></a>dm_device_delete_all</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
</UL>

<P><STRONG><a name="[99]"></a>dm_service_context_set</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[9a]"></a>dm_service_context_get</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>

<P><STRONG><a name="[ee]"></a>dm_service_context_delete</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>dm_application_context_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>dm_application_context_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>dm_application_context_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>dm_application_instance_set</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, device_manager_central.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>dm_peer_addr_set</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[9c]"></a>dm_peer_addr_get</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[9d]"></a>dm_distributed_keys_get</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>

<P><STRONG><a name="[54]"></a>dm_ble_evt_handler</STRONG> (Thumb, 874 bytes, Stack size 96 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = dm_ble_evt_handler &rArr; device_context_store &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_security_request
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_find
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[66]"></a>ble_bas_c_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ble_bas_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_bas_c_init &rArr; ble_db_discovery_evt_register
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_evt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>ble_bas_c_on_ble_evt</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, ble_bas_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_bas_c_on_ble_evt &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[5d]"></a>ble_bas_c_bl_notif_enable</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ble_bas_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_bas_c_bl_notif_enable &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_c_evt_handler
</UL>

<P><STRONG><a name="[5c]"></a>ble_bas_c_bl_read</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ble_bas_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_bas_c_bl_read &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_c_evt_handler
</UL>

<P><STRONG><a name="[65]"></a>ble_hrs_c_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ble_hrs_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_hrs_c_init &rArr; ble_db_discovery_evt_register
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_evt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>ble_hrs_c_on_ble_evt</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ble_hrs_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_hrs_c_on_ble_evt &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[51]"></a>ble_hrs_c_hrm_notif_enable</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ble_hrs_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_hrs_c_hrm_notif_enable &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs_c_evt_handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
</UL>

<P><STRONG><a name="[a5]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, nrf_drv_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[a3]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_gpiote_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[c7]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[a6]"></a>nrf_drv_gpiote_in_event_disable</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
</UL>

<P><STRONG><a name="[aa]"></a>nrf_drv_gpiote_in_uninit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_uninit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_close
</UL>

<P><STRONG><a name="[ab]"></a>nrf_drv_gpiote_out_uninit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_uninit
</UL>

<P><STRONG><a name="[ac]"></a>nrf_drv_gpiote_uninit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[ad]"></a>nrf_drv_gpiote_out_init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[f3]"></a>nrf_drv_gpiote_out_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>nrf_drv_gpiote_out_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>nrf_drv_gpiote_out_toggle</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>nrf_drv_gpiote_out_task_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>nrf_drv_gpiote_out_task_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>nrf_drv_gpiote_out_task_addr_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>

<P><STRONG><a name="[f8]"></a>nrf_drv_gpiote_out_task_force</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>nrf_drv_gpiote_out_task_trigger</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>

<P><STRONG><a name="[b1]"></a>nrf_drv_gpiote_in_init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[b2]"></a>nrf_drv_gpiote_in_event_enable</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[c4]"></a>nrf_drv_gpiote_in_is_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_uart_event_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_is_pushed
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[b4]"></a>nrf_drv_gpiote_in_event_addr_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>

<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>pstorage_sys_event_handler</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = pstorage_sys_event_handler &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_dequeue
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_element_init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[6a]"></a>pstorage_init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pstorage_init &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_element_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[92]"></a>pstorage_register</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pstorage_register &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[8c]"></a>pstorage_block_identifier_get</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_distributed_keys_get
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_service_context_get
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_service_context_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[2e]"></a>pstorage_store</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = pstorage_store &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>pstorage_update</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = pstorage_update &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>pstorage_load</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pstorage_load
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_distributed_keys_get
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[93]"></a>pstorage_clear</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[4a]"></a>pstorage_access_status_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>

<P><STRONG><a name="[c1]"></a>action_tx_stop</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = action_tx_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_tx_send
</UL>

<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART0_IRQHandler &rArr; on_uart_event &rArr; action_tx_send &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>app_uart_init</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = app_uart_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>app_uart_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_uart_fifo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_get
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[c9]"></a>app_uart_put</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_uart_put &rArr; on_uart_event &rArr; action_tx_send &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_put
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[ca]"></a>app_uart_flush</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_uart_fifo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_flush
</UL>

<P><STRONG><a name="[f9]"></a>app_uart_get_connection_state</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_uart_fifo.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>app_uart_close</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_uart_fifo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[48]"></a>app_error_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_error.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_error_handle
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_c_evt_handler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs_c_evt_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[cd]"></a>fgetc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_get
</UL>

<P><STRONG><a name="[36]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fputc &rArr; app_uart_put &rArr; on_uart_event &rArr; action_tx_send &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[74]"></a>app_button_init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[75]"></a>app_button_enable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_button_enable &rArr; nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_buttons_enable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[79]"></a>app_button_disable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_buttons_disable
</UL>

<P><STRONG><a name="[ce]"></a>app_button_is_pushed</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>

<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SWI0_IRQHandler &rArr; list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expired_timers_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>app_timer_init</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>app_timer_create</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[6d]"></a>app_timer_start</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[6e]"></a>app_timer_stop</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[db]"></a>app_timer_stop_all</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>

<P><STRONG><a name="[fa]"></a>app_timer_cnt_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>app_timer_cnt_diff_compute</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_timer.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>app_fifo_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[c5]"></a>app_fifo_put</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>app_fifo_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_tx_send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_get
</UL>

<P><STRONG><a name="[cb]"></a>app_fifo_flush</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_fifo.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[35]"></a>softdevice_assertion_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_assertion_handler &rArr; assert_nrf_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = intern_softdevice_events_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>softdevice_handler_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_handler_init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[fc]"></a>softdevice_handler_sd_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, softdevice_handler.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[69]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SWI2_IRQHandler &rArr; intern_softdevice_events_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[fd]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_state_process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_peer_addr_get
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_peer_addr_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_service_context_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_allocate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>

<P><STRONG><a name="[fe]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[ff]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8d]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[45]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[102]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[103]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[5b]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_text_set
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_c_evt_handler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs_c_evt_handler
</UL>

<P><STRONG><a name="[70]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_state_process
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>

<P><STRONG><a name="[104]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[105]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[106]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>scan_start</STRONG> (Thumb, 194 bytes, Stack size 96 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = scan_start &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_access_status_get
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_whitelist_create
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_event_handler
</UL>

<P><STRONG><a name="[26]"></a>device_manager_event_handler</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = device_manager_event_handler &rArr; scan_start &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_security_setup_req
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_hrm_notif_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_start
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>adv_report_parse</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adv_report_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[52]"></a>on_ble_evt</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = on_ble_evt &rArr; scan_start &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_report_parse
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[24]"></a>ble_evt_dispatch</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ble_evt_dispatch &rArr; on_ble_evt &rArr; scan_start &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_on_ble_evt
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_on_ble_evt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>sys_evt_dispatch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sys_evt_dispatch &rArr; scan_start &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>hrs_c_evt_handler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hrs_c_evt_handler &rArr; dm_security_setup_req &rArr; initiate_security_request
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_security_setup_req
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_hrm_notif_enable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>bas_c_evt_handler</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bas_c_evt_handler &rArr; ble_bas_c_bl_notif_enable &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_bl_read
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_bl_notif_enable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> central_test.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>ble_stack_init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_stack_init &rArr; softdevice_handler_init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>device_manager_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, central_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = device_manager_init &rArr; dm_init &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>bsp_button_event_handler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_button_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>button_timer_handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = button_timer_handler &rArr; bsp_button_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>bsp_led_indication</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_timer_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
</UL>

<P><STRONG><a name="[28]"></a>leds_timer_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = leds_timer_handler &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>alert_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>advertising_buttons_configure</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
</UL>

<P><STRONG><a name="[7d]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7f]"></a>registered_handler_get</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = registered_handler_get
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
</UL>

<P><STRONG><a name="[80]"></a>pending_user_evts_send</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pending_user_evts_send
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
</UL>

<P><STRONG><a name="[7e]"></a>discovery_error_evt_trigger</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = discovery_error_evt_trigger &rArr; pending_user_evts_send
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pending_user_evts_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registered_handler_get
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[81]"></a>discovery_complete_evt_trigger</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = discovery_complete_evt_trigger &rArr; pending_user_evts_send
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pending_user_evts_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registered_handler_get
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[82]"></a>on_srv_disc_completion</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; pending_user_evts_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[84]"></a>is_desc_discovery_reqd</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = is_desc_discovery_reqd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptors_discover
</UL>

<P><STRONG><a name="[86]"></a>characteristics_discover</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = characteristics_discover
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[83]"></a>descriptors_discover</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = descriptors_discover &rArr; is_desc_discovery_reqd
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_desc_discovery_reqd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
</UL>

<P><STRONG><a name="[85]"></a>on_characteristic_discovery_rsp</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = on_characteristic_discovery_rsp &rArr; on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; pending_user_evts_send
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptors_discover
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristics_discover
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[87]"></a>on_descriptor_discovery_rsp</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, ble_db_discovery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = on_descriptor_discovery_rsp &rArr; on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; pending_user_evts_send
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptors_discover
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[88]"></a>connection_instance_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = connection_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[89]"></a>peer_instance_init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = peer_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[9e]"></a>connection_instance_find</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = connection_instance_find
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[2c]"></a>storage_operation_dummy_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>device_context_store</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = device_context_store &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_peer_addr_set
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[39]"></a>gatts_context_store</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gatts_context_store &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>gatts_context_load</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gatts_context_load &rArr; pstorage_load
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>gatts_context_apply</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatts_context_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>dm_pstorage_cb_handler</STRONG> (Thumb, 342 bytes, Stack size 96 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = dm_pstorage_cb_handler &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>update_status_bit_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
</UL>

<P><STRONG><a name="[94]"></a>device_instance_allocate</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = device_instance_allocate
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_security_setup_req
</UL>

<P><STRONG><a name="[97]"></a>device_instance_free</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, device_manager_central.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_device_delete_all
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_device_delete
</UL>

<P><STRONG><a name="[91]"></a>app_evt_notify</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[38]"></a>no_service_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>gattc_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>gattsc_context_store</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gattsc_context_store &rArr; gatts_context_store &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>no_service_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>gattc_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>gattsc_context_load</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattsc_context_load &rArr; gatts_context_load &rArr; pstorage_load
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>no_service_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>gattc_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_central.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gattsc_context_apply</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_central.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattsc_context_apply &rArr; gatts_context_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_central.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>tx_buffer_process</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ble_bas_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_on_ble_evt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_bl_read
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_c_bl_notif_enable
</UL>

<P><STRONG><a name="[30]"></a>db_discovery_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ble_bas_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = db_discovery_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_bas_c.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>tx_buffer_process</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ble_hrs_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_on_ble_evt
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_c_hrm_notif_enable
</UL>

<P><STRONG><a name="[31]"></a>db_discover_evt_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_hrs_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = db_discover_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_hrs_c.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>channel_port_alloc</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[b5]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>

<P><STRONG><a name="[a8]"></a>pin_in_use_by_te</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[a7]"></a>pin_in_use_by_port</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[a9]"></a>channel_port_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_addr_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_trigger
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[a4]"></a>channel_free</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[bd]"></a>cmd_queue_element_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
</UL>

<P><STRONG><a name="[b6]"></a>swap_state_process</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>

<P><STRONG><a name="[b9]"></a>cmd_process</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_state_process
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_dequeue
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
</UL>

<P><STRONG><a name="[ba]"></a>cmd_queue_enqueue</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = cmd_queue_enqueue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[b7]"></a>pstorage_flash_page_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_state_process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
</UL>

<P><STRONG><a name="[b8]"></a>pstorage_flash_page_end</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_state_process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
</UL>

<P><STRONG><a name="[be]"></a>is_word_aligned</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[bc]"></a>cmd_queue_dequeue</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = cmd_queue_dequeue &rArr; cmd_process &rArr; swap_state_process &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
</UL>

<P><STRONG><a name="[bb]"></a>app_notify</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
</UL>

<P><STRONG><a name="[bf]"></a>action_tx_send</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = action_tx_send &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_get
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_tx_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
</UL>

<P><STRONG><a name="[c2]"></a>on_uart_event</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = on_uart_event &rArr; action_tx_send &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_uart_deactivate
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_tx_send
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_tx_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_uart_event_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_close
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>gpiote_uart_event_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_uart_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpiote_uart_event_handler &rArr; on_uart_event &rArr; action_tx_send &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart_fifo.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>action_uart_deactivate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_uart_fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
</UL>

<P><STRONG><a name="[34]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = detection_delay_timeout_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>gpiote_event_handler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[cf]"></a>rtc1_stop</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[d3]"></a>timer_list_insert</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[dc]"></a>timer_list_remove</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
</UL>

<P><STRONG><a name="[d0]"></a>timer_timeouts_check</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>list_insertions_handler</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>user_id_get</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
</UL>

<P><STRONG><a name="[d1]"></a>timer_list_handler_sched</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[d4]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>list_deletions_handler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = list_deletions_handler &rArr; timer_list_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>expired_timers_handler</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = expired_timers_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>compare_reg_update</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>user_op_alloc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
</UL>

<P><STRONG><a name="[e2]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
